# Chunk 6
boxplot(fatalities$PERSONS)
quantile(log2(fatalities$PERSONS),prob = (1:100)/100)
quantile(log2(fatalities$PERMVIT),prob = (1:100)/100)
fatalities = subset(fatalities,A_INTER != 3)
fatalities = subset(fatalities, A_TOD != 3)
fatalities = subset(fatalities, drunkDr %in% c(0,1))
fatalities = subset(fatalities, WEATHER %in% c(1,2,3,4,5,6,7,8,10,11,12))
fatalities = subset(fatalities, HOUR != 99)
fatalities = subset(fatalities, A_DOW != 3)
fatalities = subset(fatalities, TYP_INT %in% c(1,2,3,4,5,6,7,8,9,10))
fatalities = subset(fatalities, REL_ROAD %in% c(1,2,3,4,5,6,7,8,10,11))
fatalities = subset(fatalities, REL_ROAD %in% c(1,2,3,4,5,6))
ggplot(fatalities,aes(x = factor(STATE_NAME),y=FATALS)) + geom_boxplot(aes(colour = factor(STATE_NAME)),outlier.colour = "red", outlier.size = 1,) + coord_flip() +geom_jitter(size=0.01,alpha=0.05) + labs(title="Fatalities by State (BoxPlot)", x = "State Name", y="Total Fatalities")
fatalities = subset(fatalities, FATALS %in% c(1,2,3,4))
fatalities = subset(fatalities, A_RU != 3)
fatalities = subset(fatalities, A_SPCRA != 3)
fatalities = subset(fatalities, (PERSONS < 9) & (PERSONS > 0) & (PERSONS != PERMVIT) & (FATALS <= PERSONS))
fatalities = subset(fatalities, ROUTE != 9)
fatalities = subset(fatalities, SP_JUR != 9)
#fatalities = filter(fatalities, !RELJCT1 %in% c(8,9), !RELJCT2 %in% c(98,99))
#fatalities$RELJCT1 = NULL
# Chunk 7
print(table(fatalities$FATALS))
#fatalities = subset(fatalities, (PERSONS < 9) & (PERSONS > 0) & (PERSONS != PERMVIT) & (FATALS <= PERSONS))
# Chunk 1
library(dplyr)
county = read.csv('us_county.csv') #Received from prof. D Ficklin from geology department
fatalities = read.csv('final_data.csv')
county = county %>% select(STATE_NAME,STATE_FIPS)
county = county[!duplicated(county$STATE_NAME),]
#fatalities = merge(fatalities,county,by.x = "OBJECT_ID",by.y = "STATE_FIPS",all.x =FALSE)
# Chunk 2
library(ggplot2)
accidentFatalitiesState =  fatalities %>% group_by(STATE_NAME) %>% summarise(count = n())
ggplot(data.frame(table(fatalities$STATE_NAME))) + aes(y = Freq, x = reorder(Var1,Freq)) + geom_bar(stat = 'identity') + coord_flip() + ylab("Total Number of fatalities accident") + xlab("State Name") + ggtitle("Fatalities accident by State") + scale_y_continuous(breaks = seq(1,max(accidentFatalitiesState$count),by = 500)) +  theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=15)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 3
population = read.csv('population.csv')
accidentFatalitiesState = merge(accidentFatalitiesState,select(fatalities,OBJECT_ID,STATE_NAME),by='STATE_NAME')
accidentFatalitiesState = accidentFatalitiesState[!duplicated(accidentFatalitiesState$STATE_NAME),]
accidentFatalitiesState  = merge(accidentFatalitiesState,population,by = 'OBJECT_ID')
accidentFatalitiesState = mutate(accidentFatalitiesState,ratio = log2(count/as.numeric(gsub(",","",Population))))
ggplot(accidentFatalitiesState) + aes(y = ratio, x = reorder(STATE_NAME,ratio)) + coord_flip() + geom_bar(stat='identity') + labs(title = 'Ratio of accident fatalities to population',y = 'Log Ratio',x = 'State Name') + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=15)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 4
library(reshape)
drowsyAccidents  = fatalities %>% group_by(A_DROWSY,STATE_NAME) %>% summarise(count = n())
drowsyAccidents =cast(drowsyAccidents,STATE_NAME ~ A_DROWSY)
colnames(drowsyAccidents) = c("STATE_NAME","DROWSY","NOT_DROWSY")
drowsyAccidents[is.na(drowsyAccidents)] = 0
ggplot(drowsyAccidents) + aes(x = reorder(STATE_NAME,DROWSY/(NOT_DROWSY+DROWSY)), y = DROWSY/(NOT_DROWSY+DROWSY)) + geom_bar(stat = 'identity') + coord_flip()+ labs(title = 'Percentage of Drowsy drivers involved in accidents State-wise',y = 'Drowsy Drivers/Accident Fatalities',x = 'State Name') + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=12)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 5
library(maps)
all_states = map_data("county")
vermont = subset(all_states,region == 'vermont')
base = ggplot() + geom_polygon(data=vermont,aes(x=long,y=lat,group=group),colour = "white",fill='#E4CCCC')
base + geom_point(data = filter(fatalities,STATE_NAME=='Vermont'),aes(x = LONGITUD,y = LATITUDE,colour = as.factor(A_DROWSY)))+ labs(title = 'Location Map for fatalities involving drowsy driver in Vermont',x="",y="",color="") + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=12),legend.title = element_text(color="red")) + theme(text = element_text(colour="#266164"),axis.text.x = element_blank(),axis.text.y = element_blank()) + scale_color_manual(labels = c("Drowsy Driver", "Non Drowsy Driver"), values = c("red", "blue"))
# Chunk 6
boxplot(fatalities$PERSONS)
quantile(log2(fatalities$PERSONS),prob = (1:100)/100)
quantile(log2(fatalities$PERMVIT),prob = (1:100)/100)
fatalities = subset(fatalities,A_INTER != 3)
fatalities = subset(fatalities, A_TOD != 3)
fatalities = subset(fatalities, drunkDr %in% c(0,1))
fatalities = subset(fatalities, WEATHER %in% c(1,2,3,4,5,6,7,8,10,11,12))
fatalities = subset(fatalities, HOUR != 99)
fatalities = subset(fatalities, A_DOW != 3)
fatalities = subset(fatalities, TYP_INT %in% c(1,2,3,4,5,6,7,8,9,10))
fatalities = subset(fatalities, REL_ROAD %in% c(1,2,3,4,5,6,7,8,10,11))
fatalities = subset(fatalities, REL_ROAD %in% c(1,2,3,4,5,6))
ggplot(fatalities,aes(x = factor(STATE_NAME),y=FATALS)) + geom_boxplot(aes(colour = factor(STATE_NAME)),outlier.colour = "red", outlier.size = 1,) + coord_flip() +geom_jitter(size=0.01,alpha=0.05) + labs(title="Fatalities by State (BoxPlot)", x = "State Name", y="Total Fatalities")
fatalities = subset(fatalities, FATALS %in% c(1,2,3,4))
fatalities = subset(fatalities, A_RU != 3)
fatalities = subset(fatalities, A_SPCRA != 3)
#fatalities = subset(fatalities, (PERSONS < 9) & (PERSONS > 0) & (PERSONS != PERMVIT) & (FATALS <= PERSONS))
#fatalities = subset(fatalities, ROUTE != 9)
#fatalities = subset(fatalities, SP_JUR != 9)
#fatalities = filter(fatalities, !RELJCT1 %in% c(8,9), !RELJCT2 %in% c(98,99))
#fatalities$RELJCT1 = NULL
# Chunk 7
print(table(fatalities$FATALS))
# Chunk 1
library(dplyr)
county = read.csv('us_county.csv') #Received from prof. D Ficklin from geology department
fatalities = read.csv('final_data.csv')
county = county %>% select(STATE_NAME,STATE_FIPS)
county = county[!duplicated(county$STATE_NAME),]
#fatalities = merge(fatalities,county,by.x = "OBJECT_ID",by.y = "STATE_FIPS",all.x =FALSE)
# Chunk 2
library(ggplot2)
accidentFatalitiesState =  fatalities %>% group_by(STATE_NAME) %>% summarise(count = n())
ggplot(data.frame(table(fatalities$STATE_NAME))) + aes(y = Freq, x = reorder(Var1,Freq)) + geom_bar(stat = 'identity') + coord_flip() + ylab("Total Number of fatalities accident") + xlab("State Name") + ggtitle("Fatalities accident by State") + scale_y_continuous(breaks = seq(1,max(accidentFatalitiesState$count),by = 500)) +  theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=15)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 3
population = read.csv('population.csv')
accidentFatalitiesState = merge(accidentFatalitiesState,select(fatalities,OBJECT_ID,STATE_NAME),by='STATE_NAME')
accidentFatalitiesState = accidentFatalitiesState[!duplicated(accidentFatalitiesState$STATE_NAME),]
accidentFatalitiesState  = merge(accidentFatalitiesState,population,by = 'OBJECT_ID')
accidentFatalitiesState = mutate(accidentFatalitiesState,ratio = log2(count/as.numeric(gsub(",","",Population))))
ggplot(accidentFatalitiesState) + aes(y = ratio, x = reorder(STATE_NAME,ratio)) + coord_flip() + geom_bar(stat='identity') + labs(title = 'Ratio of accident fatalities to population',y = 'Log Ratio',x = 'State Name') + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=15)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 4
library(reshape)
drowsyAccidents  = fatalities %>% group_by(A_DROWSY,STATE_NAME) %>% summarise(count = n())
drowsyAccidents =cast(drowsyAccidents,STATE_NAME ~ A_DROWSY)
colnames(drowsyAccidents) = c("STATE_NAME","DROWSY","NOT_DROWSY")
drowsyAccidents[is.na(drowsyAccidents)] = 0
ggplot(drowsyAccidents) + aes(x = reorder(STATE_NAME,DROWSY/(NOT_DROWSY+DROWSY)), y = DROWSY/(NOT_DROWSY+DROWSY)) + geom_bar(stat = 'identity') + coord_flip()+ labs(title = 'Percentage of Drowsy drivers involved in accidents State-wise',y = 'Drowsy Drivers/Accident Fatalities',x = 'State Name') + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=12)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 5
library(maps)
all_states = map_data("county")
vermont = subset(all_states,region == 'vermont')
base = ggplot() + geom_polygon(data=vermont,aes(x=long,y=lat,group=group),colour = "white",fill='#E4CCCC')
base + geom_point(data = filter(fatalities,STATE_NAME=='Vermont'),aes(x = LONGITUD,y = LATITUDE,colour = as.factor(A_DROWSY)))+ labs(title = 'Location Map for fatalities involving drowsy driver in Vermont',x="",y="",color="") + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=12),legend.title = element_text(color="red")) + theme(text = element_text(colour="#266164"),axis.text.x = element_blank(),axis.text.y = element_blank()) + scale_color_manual(labels = c("Drowsy Driver", "Non Drowsy Driver"), values = c("red", "blue"))
# Chunk 6
boxplot(fatalities$PERSONS)
quantile(log2(fatalities$PERSONS),prob = (1:100)/100)
quantile(log2(fatalities$PERMVIT),prob = (1:100)/100)
fatalities = subset(fatalities,A_INTER != 3)
fatalities = subset(fatalities, A_TOD != 3)
fatalities = subset(fatalities, drunkDr %in% c(0,1))
fatalities = subset(fatalities, WEATHER %in% c(1,2,3,4,5,6,7,8,10,11,12))
fatalities = subset(fatalities, HOUR != 99)
fatalities = subset(fatalities, A_DOW != 3)
fatalities = subset(fatalities, TYP_INT %in% c(1,2,3,4,5,6,7,8,9,10))
fatalities = subset(fatalities, REL_ROAD %in% c(1,2,3,4,5,6,7,8,10,11))
fatalities = subset(fatalities, REL_ROAD %in% c(1,2,3,4,5,6))
ggplot(fatalities,aes(x = factor(STATE_NAME),y=FATALS)) + geom_boxplot(aes(colour = factor(STATE_NAME)),outlier.colour = "red", outlier.size = 1,) + coord_flip() +geom_jitter(size=0.01,alpha=0.05) + labs(title="Fatalities by State (BoxPlot)", x = "State Name", y="Total Fatalities")
fatalities = subset(fatalities, FATALS %in% c(1,2,3,4))
fatalities = subset(fatalities, A_RU != 3)
fatalities = subset(fatalities, A_SPCRA != 3)
fatalities = subset(fatalities, (PERSONS < 9) & (PERSONS > 0) & (PERSONS == PERMVIT) & (FATALS <= PERSONS))
fatalities = subset(fatalities, ROUTE != 9)
fatalities = subset(fatalities, SP_JUR != 9)
fatalities = filter(fatalities, !RELJCT1 %in% c(8,9), !RELJCT2 %in% c(98,99))
fatalities$RELJCT1 = NULL
# Chunk 7
print(table(fatalities$FATALS))
table(fatalities$A_D21_24)
table(fatalities$A_D21_24)
table(fatalities$A_D21_24,fatalities$drunkDr)
table(fatalities$A_D15_20,fatalities$drunkDr)
table(fatalities$A_D65PLS,fatalities$drunkDr)
table(fatalities$A_D21_24,fatalities$drunkDr)[1.]
table(fatalities$A_D21_24,fatalities$drunkDr)[1,]
rbind(table(fatalities$A_D21_24,fatalities$drunkDr)[1,],table(fatalities$A_D15_20,fatalities$drunkDr)[1,], table(fatalities$A_D65PLS,fatalities$drunkDr)[,1])
rbind(table(fatalities$A_D21_24,fatalities$drunkDr)[1,],table(fatalities$A_D15_20,fatalities$drunkDr)[1,], table(fatalities$A_D65PLS,fatalities$drunkDr)[1,])
ageDrunkFat = rbind(table(fatalities$A_D21_24,fatalities$drunkDr)[1,],table(fatalities$A_D15_20,fatalities$drunkDr)[1,], table(fatalities$A_D65PLS,fatalities$drunkDr)[1,])
ageDrunkFat
chisq.test(ageDrunkFat)
ageDrunkFat$1
ageDrunkFat[,1]
ageDrunkFat[,0]
ageDrunkFat[,2]
ageDrunkFat$`1
w''
'
)
`
ageDrunkFat$`1`
sum(ageDrunkFat[2,])
ageDrunkFat
sum(ageDrunkFat[1,])
ageDrunkFat[1,]
sum(ageDrunkFat[,2])
sum(ageDrunkFat[,1])
2681/10232
2664*0.262
2681/(2681+10232)
sum(ageDrunkFat[1,])
sum(ageDrunkFat[2,])
sum(ageDrunkFat[3,])
10232+2681
sum(ageDrunkFat[1,])*0.2
sum(ageDrunkFat[2,])*0.2
sum(ageDrunkFat[3,])*0.2
sum(ageDrunkFat[1,])*0.8
sum(ageDrunkFat[2,])*0.8
sum(ageDrunkFat[3,])*0.8
actual = c(2664,2820, 4748, 1340, 736, 605)
expected = c(3203.2, 2844.8, 4282.4, 800.8, 711.2, 1070.6)
dim(actual)
len(actual)
length(actual)
length(expected)
sum((actual - expected)**2/expected)
pt(1)
pchisq(708.0128)
pchisq(708.0128,df = 2)
1-pchisq(708.0128,df = 2)
1-pchisq(708.0128,df = 3)
(actual - expected)**2/expected)
(actual - expected)**2/expected
(2664-3203.2)**2/3203.2
r = (actual - expected)**2/expected
r
sum(r)
1-pchisq(2 * sum(actual * log(actual/expected)))
1-pchisq(2 * sum(actual * log(actual/expected)),df=2)
table(fatalities$WEATHER,fatalities$STATE_NAME)
chisq.test(table(fatalities$WEATHER,fatalities$STATE_NAME))
table(fatalities$WEATHER)
sort(table(fatalities$WEATHER))
wea = sort(table(fatalities$WEATHER))
print(wea/sum(wea))
table(fatalities$WEATHER,fatalities$STATE_NAME/fatalities$STATE_NAME)
table(fatalities$STATE_NAME)
x = table(fatalities$WEATHER,fatalities$STATE_NAME)
x
View(x)
cast(x,Var1 ~ Var2)
cast(x,Var2 ~ Var1)
x = daat.frame(table(fatalities$WEATHER,fatalities$STATE_NAME))
x = data.frame(table(fatalities$WEATHER,fatalities$STATE_NAME))
cast(x,Var2 ~ Var1)
x = cast(x,Var2 ~ Var1)
x$tot = colSums(select(x,1,2,3,4,5,6,7,8,10,11,12))
select(x,1,2,3,4,5,6,7,8,10,11,12)
select(x,"1",2,3,4,5,6,7,8,10,11,12)
select(x,`1`)
select(x,`1`:)
select(x,-Var2)
colsums(select(x,-Var2))
colsum(select(x,-Var2))
colSums(select(x,-Var2))
rowSums(select(x,-Var2))
select(x,-Var2)/rowSums(select(x,-Var2))
(select(x,-Var2)/rowSums(select(x,-Var2)))*100
x = (select(x,-Var2)/rowSums(select(x,-Var2)))*100
cbind(x,table(fatalities$WEATHER,fatalities$STATE_NAME))
data.frame(table(fatalities$WEATHER,fatalities$STATE_NAME))
wea = data.frame(table(fatalities$WEATHER,fatalities$STATE_NAME))
wea = cast(wea, Var1 ~Var2)
View(wea)
wea = data.frame(table(fatalities$WEATHER,fatalities$STATE_NAME))
wea = cast(wea, Var2 ~Var2)
wea = cast(wea, Var2 ~Var1)
View(wea)
wea = data.frame(table(fatalities$WEATHER,fatalities$STATE_NAME))
wea = cast(wea, Var2 ~Var1)
wea = cbind(wea$Var2,(select(wea,-Var2)/rowSums(select(wea,-Var2)))*100)
View(wea)
wea = data.frame(table(fatalities$WEATHER,fatalities$STATE_NAME))
wea = cast(wea, Var2 ~Var1)
wea = cbind("Var2"=wea$Var2,(select(wea,-Var2)/rowSums(select(wea,-Var2)))*100)
View(wea)
wea = data.frame(table(fatalities$WEATHER,fatalities$STATE_NAME))
wea = cast(wea, Var2 ~Var1)
wea = cbind("STATE_NAME"=wea$Var2,(select(wea,-Var2)/rowSums(select(wea,-Var2)))*100)
View(wea)
sort(wea$1`10`)
sort(wea$`10`)
wea[sort(wea$`10`),]
wea[,sort(wea$`10`)]
wea[order(wea$`10`),]
View(wea[order(wea$`10`),])
View(wea[order(wea$`2`),])
View(wea[order(wea$`1`),])
heatmap(select(wea,-STATE_NAME))
heatmap(as.numeric(select(wea,-STATE_NAME)))
help(melt)
melt(wea)
lappy(select(wea,-STATE_NAME),as.numeric)
lapply(select(wea,-STATE_NAME),as.numeric)
sapply(select(wea,-STATE_NAME),as.numeric)
heatmap(sapply(select(wea,-STATE_NAME),as.numeric))
heatmap(scale(sapply(select(wea,-STATE_NAME),as.numeric)))
nrow(we)
nrow(wea)
help("heatmap")
heatmap(scale(sapply(select(wea,-STATE_NAME),as.numeric)),labRow = row.names(wea))
row.names(wea) = wea$STATE_NAME
heatmap(scale(sapply(select(wea,-STATE_NAME),as.numeric)),labRow = row.names(wea))
View(scale(wea))
View(scale(sapply(select(wea,-STATE_NAME),as.numeric)))
heatmap(sapply(select(wea,-STATE_NAME),as.numeric),labRow = row.names(wea),scale = col)
heatmap(sapply(select(wea,-STATE_NAME),as.numeric),labRow = row.names(wea),scale = "col")
wea = data.frame(table(fatalities$WEATHER,fatalities$STATE_NAME))
wea = cast(wea, Var2 ~Var1)
row.names(wea) = wea$Var2
heatmap(sapply(select(wea,-STATE_NAME),as.numeric),labRow = row.names(wea),scale = "row")
heatmap(sapply(wea,as.numeric),labRow = row.names(wea),scale = "row")
wea = data.frame(table(fatalities$WEATHER,"STATE_NAME" = fatalities$STATE_NAME))
View(wea)
wea = cast(wea, Var2 ~Var1)
row.names(wea) = wea$Var2
View(wea)
wea = data.frame(table(fatalities$WEATHER,"STATE_NAME" = fatalities$STATE_NAME))
wea = cast(wea, STATE_NAME ~Var1)
row.names(wea) = wea$STATE_NAME
heatmap(sapply(select(wea,-STATE_NAME),as.numeric),labRow = row.names(wea),scale = "row")
heatmap(sapply(select(wea,-STATE_NAME),as.numeric),labRow = row.names(wea),scale = "col")
heatmap(scale(sapply(select(wea,-STATE_NAME),as.numeric)),labRow = row.names(wea))
cor(select(wea,-STATE_NAME))
wea$STATE_NAME = 1:nrow(wea)
heatmap(sapply(select(wea,-STATE_NAME),as.numeric),labRow = row.names(wea),scale = "row")
heatmap(sapply(,as.numeric),labRow = row.names(wea),scale = "row")
heatmap(sapply(wea,as.numeric),labRow = row.names(wea),scale = "row")
heatmap(sapply(wea,as.numeric),labRow = row.names(wea),scale = "col")
heatmap(sapply(wea,as.numeric),labRow = row.names(wea))
heatmap(sapply(wea,as.numeric),labRow = row.names(wea),scale = FALSE)
heatmap(sapply(wea,as.numeric),labRow = row.names(wea),scale = False)
heatmap(sapply(select(wea,-STATE_NAME),as.numeric),labRow = row.names(wea),scale = "row")
heatmap(sapply(select(wea,-STATE_NAME),as.numeric),labRow = row.names(wea),scale = "col")
wea = data.frame(table(fatalities$WEATHER,"STATE_NAME" = fatalities$STATE_NAME))
wea = cast(wea, STATE_NAME ~Var1)
row.names(wea) = wea$STATE_NAME
heatmap(scale(sapply(select(wea,-STATE_NAME),as.numeric)),labRow = row.names(wea))
install.packages("heatmaply")
install.packages("heatmaply")
install.packages("heatmaply")
install.packages("heatmaply")
install.packages("heatmaply")
install.packages("heatmaply")
install.packages("heatmaply")
heatmap(scale(sapply(select(wea,-STATE_NAME),as.numeric)),labRow = row.names(wea))
#wea = cbind("STATE_NAME"=wea$Var2,(select(wea,-Var2)/rowSums(select(wea,-Var2)))*100)
# Chunk 1
library(dplyr)
county = read.csv('us_county.csv') #Received from prof. D Ficklin from geology department
fatalities = read.csv('final_data.csv')
county = county %>% select(STATE_NAME,STATE_FIPS)
county = county[!duplicated(county$STATE_NAME),]
#fatalities = merge(fatalities,county,by.x = "OBJECT_ID",by.y = "STATE_FIPS",all.x =FALSE)
# Chunk 2
library(ggplot2)
accidentFatalitiesState =  fatalities %>% group_by(STATE_NAME) %>% summarise(count = n())
ggplot(data.frame(table(fatalities$STATE_NAME))) + aes(y = Freq, x = reorder(Var1,Freq)) + geom_bar(stat = 'identity') + coord_flip() + ylab("Total Number of fatalities accident") + xlab("State Name") + ggtitle("Fatalities accident by State") + scale_y_continuous(breaks = seq(1,max(accidentFatalitiesState$count),by = 500)) +  theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=15)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 3
population = read.csv('population.csv')
accidentFatalitiesState = merge(accidentFatalitiesState,select(fatalities,OBJECT_ID,STATE_NAME),by='STATE_NAME')
accidentFatalitiesState = accidentFatalitiesState[!duplicated(accidentFatalitiesState$STATE_NAME),]
accidentFatalitiesState  = merge(accidentFatalitiesState,population,by = 'OBJECT_ID')
accidentFatalitiesState = mutate(accidentFatalitiesState,ratio = log2(count/as.numeric(gsub(",","",Population))))
ggplot(accidentFatalitiesState) + aes(y = ratio, x = reorder(STATE_NAME,ratio)) + coord_flip() + geom_bar(stat='identity') + labs(title = 'Ratio of accident fatalities to population',y = 'Log Ratio',x = 'State Name') + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=15)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 4
library(reshape)
drowsyAccidents  = fatalities %>% group_by(A_DROWSY,STATE_NAME) %>% summarise(count = n())
drowsyAccidents =cast(drowsyAccidents,STATE_NAME ~ A_DROWSY)
colnames(drowsyAccidents) = c("STATE_NAME","DROWSY","NOT_DROWSY")
drowsyAccidents[is.na(drowsyAccidents)] = 0
ggplot(drowsyAccidents) + aes(x = reorder(STATE_NAME,DROWSY/(NOT_DROWSY+DROWSY)), y = DROWSY/(NOT_DROWSY+DROWSY)) + geom_bar(stat = 'identity') + coord_flip()+ labs(title = 'Percentage of Drowsy drivers involved in accidents State-wise',y = 'Drowsy Drivers/Accident Fatalities',x = 'State Name') + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=12)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 5
library(maps)
all_states = map_data("county")
vermont = subset(all_states,region == 'vermont')
base = ggplot() + geom_polygon(data=vermont,aes(x=long,y=lat,group=group),colour = "white",fill='#E4CCCC')
base + geom_point(data = filter(fatalities,STATE_NAME=='Vermont'),aes(x = LONGITUD,y = LATITUDE,colour = as.factor(A_DROWSY)))+ labs(title = 'Location Map for fatalities involving drowsy driver in Vermont',x="",y="",color="") + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=12),legend.title = element_text(color="red")) + theme(text = element_text(colour="#266164"),axis.text.x = element_blank(),axis.text.y = element_blank()) + scale_color_manual(labels = c("Drowsy Driver", "Non Drowsy Driver"), values = c("red", "blue"))
# Chunk 6
boxplot(fatalities$PERSONS)
quantile(log2(fatalities$PERSONS),prob = (1:100)/100)
quantile(log2(fatalities$PERMVIT),prob = (1:100)/100)
fatalities = subset(fatalities,A_INTER != 3)
fatalities = subset(fatalities, A_TOD != 3)
fatalities = subset(fatalities, drunkDr %in% c(0,1))
fatalities = subset(fatalities, WEATHER %in% c(1,2,3,4,5,6,7,8,10,11,12))
fatalities = subset(fatalities, HOUR != 99)
fatalities = subset(fatalities, A_DOW != 3)
fatalities = subset(fatalities, TYP_INT %in% c(1,2,3,4,5,6,7,8,9,10))
fatalities = subset(fatalities, REL_ROAD %in% c(1,2,3,4,5,6,7,8,10,11))
fatalities = subset(fatalities, REL_ROAD %in% c(1,2,3,4,5,6))
ggplot(fatalities,aes(x = factor(STATE_NAME),y=FATALS)) + geom_boxplot(aes(colour = factor(STATE_NAME)),outlier.colour = "red", outlier.size = 1,) + coord_flip() +geom_jitter(size=0.01,alpha=0.05) + labs(title="Fatalities by State (BoxPlot)", x = "State Name", y="Total Fatalities")
fatalities = subset(fatalities, FATALS %in% c(1,2,3,4))
fatalities = subset(fatalities, A_RU != 3)
fatalities = subset(fatalities, A_SPCRA != 3)
fatalities = subset(fatalities, (PERSONS < 9) & (PERSONS > 0) & (PERSONS == PERMVIT) & (FATALS <= PERSONS))
fatalities = subset(fatalities, ROUTE != 9)
fatalities = subset(fatalities, SP_JUR != 9)
fatalities = filter(fatalities, !RELJCT1 %in% c(8,9), !RELJCT2 %in% c(98,99))
fatalities$RELJCT1 = NULL
# Chunk 7
ageDrunkFat = rbind(table(fatalities$A_D21_24,fatalities$drunkDr)[1,],table(fatalities$A_D15_20,fatalities$drunkDr)[1,], table(fatalities$A_D65PLS,fatalities$drunkDr)[1,])
chisq.test(ageDrunkFat)
# Chunk 8
wea = sort(table(fatalities$WEATHER))
print(wea/sum(wea))
wea = data.frame(table(fatalities$WEATHER,"STATE_NAME" = fatalities$STATE_NAME))
wea = cast(wea, STATE_NAME ~Var1)
row.names(wea) = wea$STATE_NAME
heatmap(scale(sapply(select(wea,-STATE_NAME),as.numeric)),labRow = row.names(wea))
#wea = cbind("STATE_NAME"=wea$Var2,(select(wea,-Var2)/rowSums(select(wea,-Var2)))*100)
library(heatmaply)
library(ggplot2)
install.packages("ggplot")
install.packages("ggplot2")
library(ggplot2)
ggplot()
# Chunk 1
library(dplyr)
county = read.csv('us_county.csv') #Received from prof. D Ficklin from geology department
fatalities = read.csv('final_data.csv')
county = county %>% select(STATE_NAME,STATE_FIPS)
county = county[!duplicated(county$STATE_NAME),]
#fatalities = merge(fatalities,county,by.x = "OBJECT_ID",by.y = "STATE_FIPS",all.x =FALSE)
# Chunk 2
library(ggplot2)
accidentFatalitiesState =  fatalities %>% group_by(STATE_NAME) %>% summarise(count = n())
ggplot(data.frame(table(fatalities$STATE_NAME))) + aes(y = Freq, x = reorder(Var1,Freq)) + geom_bar(stat = 'identity') + coord_flip() + ylab("Total Number of fatalities accident") + xlab("State Name") + ggtitle("Fatalities accident by State") + scale_y_continuous(breaks = seq(1,max(accidentFatalitiesState$count),by = 500)) +  theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=15)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 3
population = read.csv('population.csv')
accidentFatalitiesState = merge(accidentFatalitiesState,select(fatalities,OBJECT_ID,STATE_NAME),by='STATE_NAME')
accidentFatalitiesState = accidentFatalitiesState[!duplicated(accidentFatalitiesState$STATE_NAME),]
accidentFatalitiesState  = merge(accidentFatalitiesState,population,by = 'OBJECT_ID')
accidentFatalitiesState = mutate(accidentFatalitiesState,ratio = log2(count/as.numeric(gsub(",","",Population))))
ggplot(accidentFatalitiesState) + aes(y = ratio, x = reorder(STATE_NAME,ratio)) + coord_flip() + geom_bar(stat='identity') + labs(title = 'Ratio of accident fatalities to population',y = 'Log Ratio',x = 'State Name') + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=15)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 4
library(reshape)
drowsyAccidents  = fatalities %>% group_by(A_DROWSY,STATE_NAME) %>% summarise(count = n())
drowsyAccidents =cast(drowsyAccidents,STATE_NAME ~ A_DROWSY)
colnames(drowsyAccidents) = c("STATE_NAME","DROWSY","NOT_DROWSY")
drowsyAccidents[is.na(drowsyAccidents)] = 0
ggplot(drowsyAccidents) + aes(x = reorder(STATE_NAME,DROWSY/(NOT_DROWSY+DROWSY)), y = DROWSY/(NOT_DROWSY+DROWSY)) + geom_bar(stat = 'identity') + coord_flip()+ labs(title = 'Percentage of Drowsy drivers involved in accidents State-wise',y = 'Drowsy Drivers/Accident Fatalities',x = 'State Name') + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=12)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 5
library(maps)
all_states = map_data("county")
vermont = subset(all_states,region == 'vermont')
base = ggplot() + geom_polygon(data=vermont,aes(x=long,y=lat,group=group),colour = "white",fill='#E4CCCC')
base + geom_point(data = filter(fatalities,STATE_NAME=='Vermont'),aes(x = LONGITUD,y = LATITUDE,colour = as.factor(A_DROWSY)))+ labs(title = 'Location Map for fatalities involving drowsy driver in Vermont',x="",y="",color="") + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=12),legend.title = element_text(color="red")) + theme(text = element_text(colour="#266164"),axis.text.x = element_blank(),axis.text.y = element_blank()) + scale_color_manual(labels = c("Drowsy Driver", "Non Drowsy Driver"), values = c("red", "blue"))
# Chunk 6
boxplot(fatalities$PERSONS)
quantile(log2(fatalities$PERSONS),prob = (1:100)/100)
quantile(log2(fatalities$PERMVIT),prob = (1:100)/100)
fatalities = subset(fatalities,A_INTER != 3)
fatalities = subset(fatalities, A_TOD != 3)
fatalities = subset(fatalities, drunkDr %in% c(0,1))
fatalities = subset(fatalities, WEATHER %in% c(1,2,3,4,5,6,7,8,10,11,12))
fatalities = subset(fatalities, HOUR != 99)
fatalities = subset(fatalities, A_DOW != 3)
fatalities = subset(fatalities, TYP_INT %in% c(1,2,3,4,5,6,7,8,9,10))
fatalities = subset(fatalities, REL_ROAD %in% c(1,2,3,4,5,6,7,8,10,11))
fatalities = subset(fatalities, REL_ROAD %in% c(1,2,3,4,5,6))
ggplot(fatalities,aes(x = factor(STATE_NAME),y=FATALS)) + geom_boxplot(aes(colour = factor(STATE_NAME)),outlier.colour = "red", outlier.size = 1,) + coord_flip() +geom_jitter(size=0.01,alpha=0.05) + labs(title="Fatalities by State (BoxPlot)", x = "State Name", y="Total Fatalities")
fatalities = subset(fatalities, FATALS %in% c(1,2,3,4))
fatalities = subset(fatalities, A_RU != 3)
fatalities = subset(fatalities, A_SPCRA != 3)
fatalities = subset(fatalities, (PERSONS < 9) & (PERSONS > 0) & (PERSONS == PERMVIT) & (FATALS <= PERSONS))
fatalities = subset(fatalities, ROUTE != 9)
fatalities = subset(fatalities, SP_JUR != 9)
fatalities = filter(fatalities, !RELJCT1 %in% c(8,9), !RELJCT2 %in% c(98,99))
fatalities$RELJCT1 = NULL
# Chunk 7
ageDrunkFat = rbind(table(fatalities$A_D21_24,fatalities$drunkDr)[1,],table(fatalities$A_D15_20,fatalities$drunkDr)[1,], table(fatalities$A_D65PLS,fatalities$drunkDr)[1,])
chisq.test(ageDrunkFat)
# Chunk 8
wea = sort(table(fatalities$WEATHER))
print(wea/sum(wea))
wea = data.frame(table(fatalities$WEATHER,"STATE_NAME" = fatalities$STATE_NAME))
wea = cast(wea, STATE_NAME ~Var1)
row.names(wea) = wea$STATE_NAME
heatmap(scale(sapply(select(wea,-STATE_NAME),as.numeric)),labRow = row.names(wea))
#wea = cbind("STATE_NAME"=wea$Var2,(select(wea,-Var2)/rowSums(select(wea,-Var2)))*100)
# Chunk 1
library(dplyr)
county = read.csv('us_county.csv') #Received from prof. D Ficklin from geology department
fatalities = read.csv('final_data.csv')
county = county %>% select(STATE_NAME,STATE_FIPS)
county = county[!duplicated(county$STATE_NAME),]
#fatalities = merge(fatalities,county,by.x = "OBJECT_ID",by.y = "STATE_FIPS",all.x =FALSE)
# Chunk 2
library(ggplot2)
accidentFatalitiesState =  fatalities %>% group_by(STATE_NAME) %>% summarise(count = n())
ggplot(data.frame(table(fatalities$STATE_NAME))) + aes(y = Freq, x = reorder(Var1,Freq)) + geom_bar(stat = 'identity') + coord_flip() + ylab("Total Number of fatalities accident") + xlab("State Name") + ggtitle("Fatalities accident by State") + scale_y_continuous(breaks = seq(1,max(accidentFatalitiesState$count),by = 500)) +  theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=15)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 3
population = read.csv('population.csv')
accidentFatalitiesState = merge(accidentFatalitiesState,select(fatalities,OBJECT_ID,STATE_NAME),by='STATE_NAME')
accidentFatalitiesState = accidentFatalitiesState[!duplicated(accidentFatalitiesState$STATE_NAME),]
accidentFatalitiesState  = merge(accidentFatalitiesState,population,by = 'OBJECT_ID')
accidentFatalitiesState = mutate(accidentFatalitiesState,ratio = log2(count/as.numeric(gsub(",","",Population))))
ggplot(accidentFatalitiesState) + aes(y = ratio, x = reorder(STATE_NAME,ratio)) + coord_flip() + geom_bar(stat='identity') + labs(title = 'Ratio of accident fatalities to population',y = 'Log Ratio',x = 'State Name') + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=15)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 4
library(reshape)
drowsyAccidents  = fatalities %>% group_by(A_DROWSY,STATE_NAME) %>% summarise(count = n())
drowsyAccidents =cast(drowsyAccidents,STATE_NAME ~ A_DROWSY)
colnames(drowsyAccidents) = c("STATE_NAME","DROWSY","NOT_DROWSY")
drowsyAccidents[is.na(drowsyAccidents)] = 0
ggplot(drowsyAccidents) + aes(x = reorder(STATE_NAME,DROWSY/(NOT_DROWSY+DROWSY)), y = DROWSY/(NOT_DROWSY+DROWSY)) + geom_bar(stat = 'identity') + coord_flip()+ labs(title = 'Percentage of Drowsy drivers involved in accidents State-wise',y = 'Drowsy Drivers/Accident Fatalities',x = 'State Name') + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=12)) + theme(text = element_text(size=8,colour="#266164"))
# Chunk 5
library(maps)
all_states = map_data("county")
vermont = subset(all_states,region == 'vermont')
base = ggplot() + geom_polygon(data=vermont,aes(x=long,y=lat,group=group),colour = "white",fill='#E4CCCC')
base + geom_point(data = filter(fatalities,STATE_NAME=='Vermont'),aes(x = LONGITUD,y = LATITUDE,colour = as.factor(A_DROWSY)))+ labs(title = 'Location Map for fatalities involving drowsy driver in Vermont',x="",y="",color="") + theme_minimal() + theme(title = element_text(family = "Trebuchet MS", color="#422164", face="bold", size=12),legend.title = element_text(color="red")) + theme(text = element_text(colour="#266164"),axis.text.x = element_blank(),axis.text.y = element_blank()) + scale_color_manual(labels = c("Drowsy Driver", "Non Drowsy Driver"), values = c("red", "blue"))
# Chunk 6
boxplot(fatalities$PERSONS)
quantile(log2(fatalities$PERSONS),prob = (1:100)/100)
quantile(log2(fatalities$PERMVIT),prob = (1:100)/100)
fatalities = subset(fatalities,A_INTER != 3)
fatalities = subset(fatalities, A_TOD != 3)
fatalities = subset(fatalities, drunkDr %in% c(0,1))
fatalities = subset(fatalities, WEATHER %in% c(1,2,3,4,5,6,7,8,10,11,12))
fatalities = subset(fatalities, HOUR != 99)
fatalities = subset(fatalities, A_DOW != 3)
fatalities = subset(fatalities, TYP_INT %in% c(1,2,3,4,5,6,7,8,9,10))
fatalities = subset(fatalities, REL_ROAD %in% c(1,2,3,4,5,6,7,8,10,11))
fatalities = subset(fatalities, REL_ROAD %in% c(1,2,3,4,5,6))
ggplot(fatalities,aes(x = factor(STATE_NAME),y=FATALS)) + geom_boxplot(aes(colour = factor(STATE_NAME)),outlier.colour = "red", outlier.size = 1,) + coord_flip() +geom_jitter(size=0.01,alpha=0.05) + labs(title="Fatalities by State (BoxPlot)", x = "State Name", y="Total Fatalities")
fatalities = subset(fatalities, FATALS %in% c(1,2,3,4))
fatalities = subset(fatalities, A_RU != 3)
fatalities = subset(fatalities, A_SPCRA != 3)
fatalities = subset(fatalities, (PERSONS < 9) & (PERSONS > 0) & (PERSONS == PERMVIT) & (FATALS <= PERSONS))
fatalities = subset(fatalities, ROUTE != 9)
fatalities = subset(fatalities, SP_JUR != 9)
fatalities = filter(fatalities, !RELJCT1 %in% c(8,9), !RELJCT2 %in% c(98,99))
fatalities$RELJCT1 = NULL
# Chunk 7
ageDrunkFat = rbind(table(fatalities$A_D21_24,fatalities$drunkDr)[1,],table(fatalities$A_D15_20,fatalities$drunkDr)[1,], table(fatalities$A_D65PLS,fatalities$drunkDr)[1,])
chisq.test(ageDrunkFat)
# Chunk 8
wea = sort(table(fatalities$WEATHER))
print(wea/sum(wea))
wea = data.frame(table(fatalities$WEATHER,"STATE_NAME" = fatalities$STATE_NAME))
wea = cast(wea, STATE_NAME ~Var1)
row.names(wea) = wea$STATE_NAME
heatmap(scale(sapply(select(wea,-STATE_NAME),as.numeric)),labRow = row.names(wea))
#wea = cbind("STATE_NAME"=wea$Var2,(select(wea,-Var2)/rowSums(select(wea,-Var2)))*100)
